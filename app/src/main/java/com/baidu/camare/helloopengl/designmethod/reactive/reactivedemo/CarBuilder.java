package com.baidu.camare.helloopengl.designmethod.reactive.reactivedemo;import java.lang.reflect.Constructor;import java.lang.reflect.Field;import java.lang.reflect.InvocationTargetException;import java.lang.reflect.Method;public class CarBuilder {    public static void main(String[] args){        try {            Class cla = Class.forName("com.baidu.camare.helloopengl.designmethod.reactive.reactivedemo.AntoDriver");            //Constructor constructor = cla.getConstructor(AntoDriver.Color.class,String.class);            // Object newInstance = constructor.newInstance(AntoDriver.Color.WHITE, "宝马");            // AntoDriver antoDriver = (AntoDriver) constructor.newInstance( AntoDriver.Color.BLUE,"宝马");            Constructor constructor = cla.getConstructor();            Object newInstance = constructor.newInstance();            Method method = cla.getDeclaredMethod("run");            method.setAccessible(true);            System.out.println("=====================\n自动驾驶马上开始\n================");            method.invoke(newInstance, null);        } catch (InstantiationException e) {                e.printStackTrace();        } catch (IllegalAccessException e) {                e.printStackTrace();            }catch (ClassNotFoundException e) {            e.printStackTrace();            }catch (NoSuchMethodException e){            e.printStackTrace();            }catch (InvocationTargetException e){                e.getCause();            }    }}